# Basic CI workflow
# 26/10/22  v1
# From https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
#
# 10/01/23 Added job summary reporting and updated pytest output files for (python)-(xarray) version naming.
#          NEEDS WORK

name: Stable versions (XR<=2022.3)

on: [push]
# on:

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        # python-version: ["3.7", "3.8", "3.9", "3.10"]
        python-version: ["3.8", "3.9", "3.10"]
        xarray-version: ["0.15","0.19","2022.3"]   # , "2022.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # pip install flake8 pytest
          if [ -f requirements-CI.txt ]; then pip install -r requirements-CI.txt; fi
          # Manual install for Spherical functions, see https://epsproc.readthedocs.io/en/latest/etc/installation_notes_051120.html#using-pip
          # pip install git+git://github.com/moble/spherical_functions   # Fails with repo access issues
          pip install git+https://github.com/moble/spherical_functions.git  # OK for python >= 3.8

      # - name: Lint with flake8
      #   run: |
      #     # stop the build if there are Python syntax errors or undefined names
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      # - name: Test with pytest
      #   run: |
      #     pytest

      - name: Install Xarray
        run: pip install xarray==${{ matrix.xarray-version }}

      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          # pytest --capture=tee-sys --show-capture=all   # Basic version as per local tests
          # pytest tests --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html
          pytest --junitxml=junit/test-results-${{ matrix.python-version }}-${{ matrix.xarray-version }}.xml --cov=ePSproc --cov-report=xml --cov-report=html

      # Output reports as per https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#packaging-workflow-data-as-artifacts
      - name: Upload pytest test results
        uses: actions/upload-artifact@v3
        with:
          name: pytest-results-${{ matrix.python-version }}-${{ matrix.xarray-version }}
          path: junit/test-results-${{ matrix.python-version }}-${{ matrix.xarray-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}
        
      # Report with job summaries, see https://github.blog/2022-05-09-supercharging-github-actions-with-job-summaries/ 
      # Should push this to a table? Need to config prior to matrix.
      - name: Adding markdown
        run: echo '${{ matrix.python-version }} ${{ matrix.xarray-version }} OK' >> $GITHUB_STEP_SUMMARY
        
